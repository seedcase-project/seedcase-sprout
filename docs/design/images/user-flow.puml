@startuml user-flow

title Entire User Flow of Sprout

:User selects option to "Upload Data";
if (\nSystem shows data upload\nUI with option to create new\ntable or use existing one\n) then (Create New Table)
  :User selects\n"Create New Table";
  :System shows overlay where user will define table name and description;
  :User fills out table name and description and clicks "Create";
  while (\nVALIDATION CHECK: Does table with this name already exist?\n) is (Yes)
    :System shows error message:
    "Table with this name already
    exist. Please rename your table";
    :User renames table; 
  end while (No)
  switch (System shows create table UI)
    case (Create Table\nfrom File)
      :User selects
      "Create Table
      from File";
      :System shows UI
      with file upload;
      :User selects file and
      clicks "Create Table";
      :System loads file and
      attempts to extract 
      headers and definitions*;
      while (\nVALIDATION CHECK: Is file a CSV?\n) is (No)
        :System shows error message: 
        "The file is not a CSV file. 
        Please choose a CSV file to 
        extract table metadata from";
        :User selects new file to upload;
      end while (Yes)
    case (Create Table from\nExisting Table)
      :User selects
      "Create New Table
      from Existing Table";
      :System shows list of
      existing tables;
      :User inspects tables
      and selects base table;
    case (Create Table Manually)
      :User selects
      "Create Table Manually";
      :System shows UI where
      user can create table manually;
      :User adds headers
      and definitions;
      :User clicks "Save
      and Submit Table";
    endswitch
    #palegreen:Initial table has been created;
   while (\nVALIDATION CHECK: Table Completeness\nSystem checks that table has name\nand that all headers have definitions*\n) is (Validation failed)
    :System shows "Validation failed"
    and shows UI with table for 
    user to edit, including: 
    - headers (textbox)
    - textbox for description (textbox)
    - data type (dropdown)
    - nullable (boolean), and 
    - title (optional textbox)
    - option to "Add field"
    Missing fields are highlighted;
    :User completes/edits table;
    if (System asks user if they want to save only or submit) then (Save only)
      :User clicks "Save Draft";
      end
    else (Save and Submit)
      :User clicks "Save and Submit Table";
      label l
    endif
  end while (Validation successful)
  :System shows UI with table for user confirmation;
  while (User decides whether table is correct or needs editing) is (Incorrect table)
    :User clicks "Edit Table";
    :System shows UI with table for 
    user to edit, including: 
    - headers (textbox)
    - textbox for description (textbox)
    - data type (dropdown)
    - nullable (boolean), and 
    - title (optional textbox)
    - option to "Add field";
    :User edits table;
    :User clicks "Continue";
    goto l
   end while (Correct table)
   :User clicks "Save and Submit Table";
    #palegreen:Systems confirms: "New Table added Successfully";
  if (System asks user if they want to upload data) then (No)
    :User "quits" Sprout; 
    end
  else (Yes)
    :User clicks "Continue to Data Upload";
  endif
else (Use Existing Table)
    :User selects\n"Use Existing Table";
    :System shows UI with existing tables 
    to choose from and file upload;
    :User selects existing table and 
    selects file to upload;
    :User clicks "Continue to Data Upload";
endif 
:System initialises data upload;
while (\nVALIDATION CHECK: Check if Table and data match\n) is (Validation failed)
  :Systems shows "Upload Failed" along\nwith description on where data and\ntable do not match;
    while (User decides if they want to continue upload) is (No)
        :User clicks "Cancel Upload";
        end
    end while (Yes);
  #LightBlue:User edits file and attempts to fix errors\noutside of Sprout;
  :User clicks "Upload Edited/New Version of File";
  :System shows UI where user can add file; 
  :User selects file and clicks "Upload File";
end while (Validation successful);
while (\nSystem displays the number of \nsuccessfully validated rows \nto the user for agreement\n) is (No)
  :User clicks "Cancel Upload";
  end
end while (Yes);
:User confirms by clicking: "Confirm Number\nof Rows to Upload and Upload Data";
#palegreen:System displays confirmation: "Upload Successful";

footer \n*Definition includes the header (column name), data type, description (sentence describing what is in the variable),\nis-nullable (boolean), and an optional title (reader friendly column name).\nExample:\nheader = "adr1",\ndata type = varchar,\ndescription = "first address line of patient's address",\nis-nullable = 0, \ntitle (optional): "address line 1"
@enduml
