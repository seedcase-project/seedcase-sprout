@startuml create-package-structure
!theme seedcase from https://raw.githubusercontent.com/seedcase-project/seedcase-theme/main

state "Input" as input {
  input: - Use `path_*()` functions to help\ncreate correct paths
' Arguments -----
  path : - Path to where packages are stored
}

state "Output" as output {
  output : - The package parent folder is shown as /
  state "/packages/<id>/datapackage.json" as properties_file
  state "/packages/<id>/README.md" as readme
}

state "create_package_structure()" as cps {
  cps : - Required arg: path

  state arg <<entryPoint>>
  input --> arg

  state "verify_is_dir()" as vid
  vid : - Required arg: path
  vid : - Output: path or Error
  arg --> vid

  state "get_ids()" as gi
  gi : - Required arg: path
  gi : - Output: list of existing IDs\n  (otherwise an empty list)
  vid --> gi

  state "create_next_id()" as cni
  cni : - Required arg: list of existing IDs
  cni : - Output: ID
  gi --> cni

  state "create_id_path()" as cip
  cip : - Required arg: path and ID to assign for directory
  cip : - Output: path of created directory
  cni --> cip

  state "create_dirs()" as cd
  cd : - Required arg: A list of paths
  cd : - Output: A list of paths\n  of created directories
  cip --> cd

  state "create_package_properties_template()" as cppt
  cppt : - Required arg: path
  cppt : - Output: JSON object
  cpp --> cppt

  state "create_readme_text()" as crt
  crt : - Required arg: JSON object
  crt : - Output: string
  cppt --> crt

  state "create_readme_path()" as crp
  crp : - Required arg: path
  crp : - Output: path to README
  cd --> crp

  state "create_properties_path()" as cprop
  cprop : - Required arg: path
  cprop : - Output: path to properties
  cpp --> cprop

  state "write_file()" as wf
  wf : - Required args: string (including JSON\n  as a string) and path
  wf : - Output: path of created file
  wf : - Only one string and path at a time
  wf : - Used multiple times for each write\n  operation
  
  state readme_input <<join>>
  state prop_input <<join>>
  state as_list <<join>>
  state return <<exitPoint>>

  cppt --> prop_input
  crt --> readme_input
  cprop --> prop_input
  crp --> readme_input
  
  prop_input --> wf : input to write\nproperties file
  readme_input --> wf : input to write\nreadme file
  
  wf --> as_list : Convert to list
  as_list --> return
  return --> output
}

@enduml
