---
title: "Flows"
toc-depth: 2
---

::: callout-important
We created this document mainly as a way to help us as a team all
understand and agree on what we're making and what needs to be worked
on. This means that the flows may change quite substantially until we've
reached a stable full release at `v1.0.0`.
:::

Based on the [functions](functions.qmd) that list and describe the main
functions and classes that make up the interface, this document
describes and shows how all these objects work together and flow into
one another, but not necessarily the functions exact input and output.
Those are already described in the [functions](functions.qmd) document.

Each diagram uses specific shapes and lines to represent different
things:

-   A dotted line between objects/functions means the flow is optional.
-   A solid line between objects/functions means the flow is required
    and is the next step.
-   A cylinder means an object such as a class or file.
-   A rectangle with rounded corners means an action like a function or
    method.

::: callout-caution
For some reason, the diagrams below don't display well on some browsers
like Firefox. To see them, try using a different browser like Chrome or
Edge.
:::

## Update README after changing package or resource properties

The flow for updating the README file after changing the package or
resource properties. Since the README template text is generated from
the properties in the `datapackage.json` file, any change to that file
will require updating the README file. The split between
`as_readme_text()` and `write_file()` is to allow for testing or
programmatically modifying the generated README text before writing it
to the file.

```{mermaid}
%%| label: fig-flow-update-readme
%%| fig-cap: "Diagram showing the flow of objects and functions to update the README file after changing the package or resource properties."
%%| fig-alt: "A flow diagram showing the steps to update the README file after changing the package or resource properties."
flowchart
    properties[(PackageProperties)]
    path_properties("path_properties()")
    read_package_properties("read_package_properties()")
    as_readme_text("as_readme_text()")
    write_file("write_file()")
    path_readme("path_readme()")

    path_properties --> read_package_properties
    read_package_properties --> properties
    properties --> as_readme_text
    as_readme_text --> write_file
    path_readme --> write_file
```
