---
title: "Naming scheme"
---

{{< include /docs/includes/_wip.qmd >}}

The naming scheme for Sprout is guided by our [style
guide](https://design.seedcase-project.org/style/). The below naming
scheme *only* applies to file paths, data objects, functions, URLS, API
endpoints, and command line interfaces that are exposed to or associated
with user-facing content. It does *not* apply to internal content; see
the style guide for details on naming internal (developer-facing)
content.

## Actions and objects

Guided by our style guide, we'll compose names based on the objects we
and our users interact with as well as the actions taken on those
objects.

-   Types of objects Sprout interacts with: projects, data, and
    metadata.
-   Types of actions Sprout takes on those objects: create, view,
    update, and delete
-   Types of identifiers for specific items of objects (as numbers):
    data, metadata, and project identifiers.

Additional "rules" to the naming include:

-   When a naming scheme ends without an action, the default action is
    `view`.
-   Data objects do not have any `view` action, since we want to limit
    access to looking at raw data.

Based on the above principles and our style guide, we have defined the
following naming scheme (here shown with `space` as separator):

```         
# View all projects
projects

# Create a new project
projects create

# View landing page of a specific project
projects <id> 

# Update or delete a specific project 
projects <id> update
projects <id> delete

# View all metadata objects of a specific project
projects <id> metadata

# Create a new metadata object with associated data in a 
# specific project
projects <id> metadata create
# This creates an associated data object at:
# projects <id> metadata <id> data

# View the landing page of a specific metadata object in 
# a specific project
projects <id> metadata <id>

# Update or delete metadata of a specific project
projects <id> metadata <id> update
projects <id> metadata <id> delete

# Update or delete data of a specific metadata object to 
# a specific project
projects <id> metadata <id> data update
projects <id> metadata <id> data delete
```
