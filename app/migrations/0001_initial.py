# Generated by Django 4.2.8 on 2024-02-06 11:21
from typing import Any

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

from app.models import ColumnDataType


def add_data_types(apps: Any, schema_editor: Any) -> None:
    """
    Adding the data types as a migration. Changes and additions should be done with
    new migrations
    """
    ColumnDataType(display_name="Decimal",
                   description="Also known as a Float or Double Precision. This field stores decimal numbers. Use this for items like height, blood glucose, or other measurements with high degrees of precision",
                   pandas_type="float64",
                   python_type="float"
                   ).save()
    ColumnDataType(display_name="Whole Number",
                   description="Also known as an `integer`. This field only allows whole numbers to be stored. Use this when you want to store data that doesn't need a decimal (e.g. number of people in a household)",
                   pandas_type="int64",
                   python_type="int").save()
    ColumnDataType(display_name="Text",
                   description="A text field without a limit to how many characters can be stored",
                   pandas_type="object",
                   python_type="str").save()
    ColumnDataType(display_name="Yes/No",
                   description="Also known as Yes/No, Boolean, or Logical. This stores data as either 0/1 or True/False. If you need/want to store actual words, use the Text field",
                   pandas_type="bool",
                   python_type="bool").save()
    ColumnDataType(display_name="Time",
                   description="Stores time following the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format of `hh:mm:ss.ms` (hours, minutes, seconds, milliseconds)",
                   pandas_type="timedelta64[ns]",
                   python_type="timedelta").save()
    ColumnDataType(display_name="Date+Time",
                   description="Also known as DateTime or Timestamp. The field stores the date time following the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format as `yyyy-mm-dd hh:mm:ss.ms` (year, month, day, hour, minutes, seconds, milliseconds)",
                   pandas_type="datetime64[ns]",
                   python_type="datetime").save()


def add_data_types_reversed_dummy(apps: Any, schema_editor: Any) -> None:
    """
    Django expects a method for reverting the changes in add_data_types. We can revert
    by deleting all ColumnMetaData
    """
    ColumnDataType.objects.all().delete()


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ColumnDataType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.TextField()),
                ('description', models.TextField()),
                ('pandas_type', models.TextField()),
                ('python_type', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TableMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('original_file_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modifier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ColumnMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('allow_missing_value', models.BooleanField()),
                ('allow_duplicate_value', models.BooleanField()),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.columndatatype')),
                ('table_metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tablemetadata')),
            ],
        ),
        migrations.RunPython(add_data_types, add_data_types_reversed_dummy)
    ]
